[
  {
    "path": "posts/2021-03-05-how-does-music-change-over-time/",
    "title": "How does music change over time?",
    "description": "Visualize the differing trends in volume, tempo, energy, and popularity over time.",
    "author": [
      {
        "name": "Wanjia Guo",
        "url": "https://wanjiag.github.io/"
      }
    ],
    "date": "2021-03-05",
    "categories": [
      "visualization",
      "spotify"
    ],
    "contents": "\nData Cleaning\n\n\ndata1 = data %>% \n  select(id, popularity, year, danceability, duration_ms, tempo, speechiness) %>% \n  mutate(popularity = (popularity-min(popularity))/(max(popularity)-min(popularity)),\n         danceability = (danceability-min(danceability))/(max(danceability)-min(danceability)),\n         duration = \n           (duration_ms-min(duration_ms))/(max(duration_ms)-min(duration_ms)),\n         tempo = (tempo-min(tempo))/(max(tempo)-min(tempo)),\n         speechiness = (speechiness-min(speechiness))/(max(speechiness)-min(speechiness))) %>% \n  select(-duration_ms)\n  \n\nfig1_data = data1 %>% select(-year) %>% \n  mutate(danceability = cut(danceability, 100, labels=FALSE),\n         duration = cut(duration, 100, labels=FALSE),\n         tempo = cut(tempo, 100, labels=FALSE),\n         speechiness = cut(speechiness, 100, labels=FALSE)) %>% \n  pivot_longer(cols = danceability:duration, \n               names_to = \"property\") %>% \n  group_by(property, value) %>% \n  summarise(popularity_median = median(popularity)) %>% \n  mutate(property = factor(property, levels=c(\"danceability\",\n                                              \"tempo\",\n                                              \"speechiness\",\n                                              \"duration\"),\n                           labels = c(\"Danceability\",\n                                              \"Tempo\",\n                                              \"Speechiness\",\n                                              \"Duration\")))\n\nfig2_data = data1 %>% \n  mutate(decades = year - year %% 10 ) %>% \n  select(-c(popularity, year)) %>% \n  pivot_longer(cols = danceability:duration, \n               names_to = \"property\") %>% \n  group_by(property, decades) %>% \n  summarise(mean = mean(value)) %>% \n  mutate(property = factor(property, levels=c(\"duration\",\n                                              \"speechiness\",\n                                              \"tempo\",\n                                              \"danceability\")))\n\n\n\n\n\nfig2_data2 = data_by_year %>% \n  select(-c(key, mode)) %>% \n  mutate(acousticness = (acousticness-min(acousticness))/(max(acousticness)-min(acousticness)),\n         danceability = (danceability-min(danceability))/(max(danceability)-min(danceability)),\n         duration = (duration_ms-min(duration_ms))/(max(duration_ms)-min(duration_ms)),\n         energy = (energy-min(energy))/(max(energy)-min(energy)),\n         instrumentalness =\n           (instrumentalness-min(instrumentalness))/(max(instrumentalness)-min(instrumentalness)),\n         liveness = (liveness-min(liveness))/(max(liveness)-min(liveness)),\n         loudness = (loudness-min(loudness))/(max(loudness)-min(loudness)),\n         speechiness = (speechiness-min(speechiness))/(max(speechiness)-min(speechiness)),\n         tempo = (tempo-min(tempo))/(max(tempo)-min(tempo)),\n         valence = (valence-min(valence))/(max(valence)-min(valence)),\n         popularity = (popularity-min(popularity))/(max(popularity)-min(popularity))\n         ) %>% \n  select(-duration_ms) %>% \n  pivot_longer(cols = acousticness:duration, \n               names_to = \"property\")\n\nfig2_data3 = fig2_data2 %>% \n  filter(property %in% c('energy', 'loudness', 'tempo', 'popularity')) %>% \n  mutate(property = factor(property, levels=c('popularity','energy', 'loudness', 'tempo')))\n\n\n\nFinal Visualization:\n\n\nggplot(fig2_data3 %>% \n         filter(property!=\"popularity\"),\n       aes(x=year, y=value)) + \n  geom_line(aes(color=property)) +\n  geom_line(data=fig2_data3 %>% \n              filter(property==\"popularity\"), \n            aes(x=year, y=value), \n            color=\"red\",\n            size=1.3)+\n  gghighlight(use_direct_label = FALSE)+\n  scale_color_OkabeIto(darken=-0.5)+\n  theme(plot.title = ggtext::element_markdown(),\n        legend.position = \"none\")+\n  labs(title = \"Music is \n  <span style = 'color: #57B4E9'>louder<\/span> \n  <span style = 'color: #029E73'>higher tempo<\/span> \n  <span style = 'color: #E69F00'>more energetic<\/span>,\\n\n  but NOT\n  <span style = 'color: #FF2500'>**more popular**<\/span>\")\n\n\n\n\nAttempt 1:\n\n\nggplot(fig2_data, aes(x=decades, y=property, fill=mean)) + geom_tile() +\n  scale_fill_viridis_c(option = \"A\") + \n  labs(y=\"Property\", x=\"Decade\") + \n  theme(legend.position = \"top\")\n\n\n\n\nThis is not bad, but also not great. I think the suggestion that I received the most is to rank the property based on the color, so I did that. However, I still feel because I calculated the mean of song’s property, though I normalized scores, the range of each property is still very different, which makes the change within some properties impossible to see.\nAttempt 2:\n\n\nggplot(fig2_data2, aes(x=year, y=value)) + \n  geom_line(aes(color=property)) +\n  gghighlight(use_direct_label = FALSE)+\n  facet_wrap(~property)+\n  theme(legend.position = \"none\")\n\n\n\n\nI realized there is another dataset that is already ranked by year, so I thought I would try to clean that dataset and see if that works better. I also take a look at a lot more properties just to see what properties changes more or are more interesting. I end up thinking I should try to take in the characteristics that are interesting and tell a story. E.g. I found 3 increasing (energy, loudness, tempo) properties as well as 3 decreasing (acousticness, instrumentalness, speechiness) pnes. Popularity and duration are something that people are generally interested in as well.\n\n\n\n",
    "preview": "posts/2021-03-05-how-does-music-change-over-time/how-does-music-change-over-time_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-03-06T15:48:43-08:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-03-05-what-kinds-of-songs-are-popular/",
    "title": "What kinds of songs are popular?",
    "description": "Danceability, tempo, speechiness, and duration: what makes a song popular?",
    "author": [
      {
        "name": "Wanjia Guo",
        "url": "https://wanjiag.github.io/"
      }
    ],
    "date": "2021-03-05",
    "categories": [
      "visualization",
      "spotify"
    ],
    "contents": "\nData clearning:\n\n\ndata1 = data %>% \n  select(id, popularity, year, danceability, duration_ms, tempo, speechiness) %>% \n  mutate(popularity = (popularity-min(popularity))/(max(popularity)-min(popularity)),\n         danceability = (danceability-min(danceability))/(max(danceability)-min(danceability)),\n         duration = \n           (duration_ms-min(duration_ms))/(max(duration_ms)-min(duration_ms)),\n         tempo = (tempo-min(tempo))/(max(tempo)-min(tempo)),\n         speechiness = (speechiness-min(speechiness))/(max(speechiness)-min(speechiness))) %>% \n  select(-duration_ms)\n  \n\nfig1_data = data1 %>% select(-year) %>% \n  mutate(danceability = cut(danceability, 100, labels=FALSE),\n         duration = cut(duration, 100, labels=FALSE),\n         tempo = cut(tempo, 100, labels=FALSE),\n         speechiness = cut(speechiness, 100, labels=FALSE)) %>% \n  pivot_longer(cols = danceability:duration, \n               names_to = \"property\") %>% \n  group_by(property, value) %>% \n  summarise(popularity_median = median(popularity)) %>% \n  mutate(property = factor(property, levels=c(\"danceability\",\n                                              \"tempo\",\n                                              \"speechiness\",\n                                              \"duration\"),\n                           labels = c(\"Danceability\",\n                                              \"Tempo\",\n                                              \"Speechiness\",\n                                              \"Duration\")))\n\n\n\nFinal Visualization:\n\n\nggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) + \n  geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) + \n  geom_smooth(aes(color=property, fill=property))+\n  labs(x = \"Normalized Value (0-100)\", y = \"Median Popularity (0-100)\") + \n  scale_fill_OkabeIto()+\n  scale_color_OkabeIto(darken=-0.7)+\n  facet_wrap(~property, nrow=1)+\n  ggdark::dark_theme_gray() +\n  theme(legend.position = \"none\") +\n  labs(title = \"Relationship between different song properties and popularity\")\n\n\n\n\nI think I like this version the best because it not only shows the raw data, but also shows the trend. By separating each property into different panels, it makes it a lot easier to see that danceability have a almost linear relationship with popularity, whereas other properties all have a “sweet spot” for a song to be popular.\nAttempt 1:\n\n\nggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) + \n  geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.6) + \n  labs(x = \"Normalized Value (0-100)\", y = \"Median Popularity (0-100)\") + \n  scale_fill_OkabeIto()\n\n\n\n\nOverall, the overlapping part in the figure makes it really hard to distinguish among each property. I also feel it is hard to see the trend because of how noisy the data is.\nAttempt 2:\n\n\nggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) + \n  geom_smooth(aes(color=property, fill=property))+\n  labs(x = \"Normalized Value (0-100)\", y = \"Median Popularity (0-100)\") + \n  scale_fill_OkabeIto()+\n  scale_color_OkabeIto()+\n  facet_wrap(~property)+\n  gghighlight()+\n  theme(legend.position = \"none\")\n\n\n\n\nI also thought maybe I didn’t have to show the original data to make the figure looks cleaner. This second figure focuses on the trend, or the best fit curve based on each property without showing the actual data. However, I still feel showing how noisy the original data is will be meaningful.\n\n\n\n",
    "preview": "posts/2021-03-05-what-kinds-of-songs-are-popular/what-kinds-of-songs-are-popular_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2021-03-05T19:14:07-08:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Visualizing Spotify",
    "description": "Welcome to our new blog, Visualizing Spotify. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Wanjia Guo",
        "url": "https://wanjiag.github.io/"
      }
    ],
    "date": "2021-03-05",
    "categories": [
      "others"
    ],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-05T15:55:47-08:00",
    "input_file": {}
  }
]
