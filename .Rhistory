geom_text(aes(label = as.character(year)),
x = 60 , y = -2, alpha=0.8,
size = 40, col = "grey40") +
geom_rect(alpha = .9) +
scale_x_continuous(
limits = c(-50, 100),
breaks = c(0, 20, 40, 60, 80, 100)) +
geom_text(hjust = "right",
aes(label = artists,
color = old),
x = -12) +
geom_text(aes(y = rank, label = name),
color = "white",
x = -8,
hjust = "left") +
scale_fill_manual(values=c("#CB7BA7","#1273B0"))+
scale_color_manual(values=c("#CB7BA7","#1273B0"))+
scale_y_reverse() +
labs(x = 'Popularity (0-100)',
y = '',
title = "The most popular artists through the decades.",
subtitle = "<span style = 'color: #CB7BA7'>New comers</span>
and
<span style = 'color: #1273B0'>Defending champions</span>",
caption = "Popularity is based on each artist's most popular song.") +
theme(legend.position = "none",
plot.subtitle = ggtext::element_markdown(size=18),
plot.title = element_text(size=20),
plot.caption = element_text(size=12))
p3 = ggplot(top10_df %>% filter(year == 2020)) +
aes(xmin = -10,
xmax = popularity,
ymin = rank - .45,
ymax = rank + .45,
y = rank,
group = artists,
fill = old) +
geom_text(aes(label = as.character(year)),
x = 60 , y = -2, alpha=0.8,
size = 40, col = "grey40") +
geom_rect(alpha = .9) +
scale_x_continuous(
limits = c(-50, 100),
breaks = c(0, 20, 40, 60, 80, 100)) +
geom_text(hjust = "right",
aes(label = artists,
color = old),
x = -12) +
geom_text(aes(y = rank, label = name),
color = "white",
x = -8,
hjust = "left") +
scale_fill_manual(values=c("#CB7BA7","#1273B0"))+
scale_color_manual(values=c("#CB7BA7","#1273B0"))+
scale_y_reverse() +
labs(x = 'Popularity (0-100)',
y = '',
title = "The most popular artists through the decades.",
subtitle = "<span style = 'color: #CB7BA7'>New comers</span>
and
<span style = 'color: #1273B0'>Defending champions</span>",
caption = "Popularity is based on each artist's most popular song.") +
theme(legend.position = "none",
plot.subtitle = ggtext::element_markdown(size=18),
plot.title = element_text(size=20),
plot.caption = element_text(size=12))
year
p3
p3 = ggplot(top10_df %>% filter(year == 2020)) +
aes(xmin = -10,
xmax = popularity,
ymin = rank - .45,
ymax = rank + .45,
y = rank,
group = artists,
fill = old) +
geom_text(aes(label = as.character(year)),
x = 80 , y = -2, alpha=0.8,
size = 40, col = "grey40") +
geom_rect(alpha = .9) +
scale_x_continuous(
limits = c(-50, 100),
breaks = c(0, 20, 40, 60, 80, 100)) +
geom_text(hjust = "right",
aes(label = artists,
color = old),
x = -12) +
geom_text(aes(y = rank, label = name),
color = "white",
x = -8,
hjust = "left") +
scale_fill_manual(values=c("#CB7BA7","#1273B0"))+
scale_color_manual(values=c("#CB7BA7","#1273B0"))+
scale_y_reverse() +
labs(x = 'Popularity (0-100)',
y = '',
title = "The most popular artists through the decades.",
subtitle = "<span style = 'color: #CB7BA7'>New comers</span>
and
<span style = 'color: #1273B0'>Defending champions</span>",
caption = "Popularity is based on each artist's most popular song.") +
theme(legend.position = "none",
plot.subtitle = ggtext::element_markdown(size=18),
plot.title = element_text(size=20),
plot.caption = element_text(size=12))
p3
p3 = ggplot(top10_df %>% filter(year == 2020)) +
aes(xmin = -10,
xmax = popularity,
ymin = rank - .45,
ymax = rank + .45,
y = rank,
group = artists,
fill = old) +
geom_text(aes(label = as.character(year)),
hjust = 0, y = -2, alpha=0.8,
size = 40, col = "grey40") +
geom_rect(alpha = .9) +
scale_x_continuous(
limits = c(-50, 100),
breaks = c(0, 20, 40, 60, 80, 100)) +
geom_text(hjust = "right",
aes(label = artists,
color = old),
x = -12) +
geom_text(aes(y = rank, label = name),
color = "white",
x = -8,
hjust = "left") +
scale_fill_manual(values=c("#CB7BA7","#1273B0"))+
scale_color_manual(values=c("#CB7BA7","#1273B0"))+
scale_y_reverse() +
labs(x = 'Popularity (0-100)',
y = '',
title = "The most popular artists through the decades.",
subtitle = "<span style = 'color: #CB7BA7'>New comers</span>
and
<span style = 'color: #1273B0'>Defending champions</span>",
caption = "Popularity is based on each artist's most popular song.") +
theme(legend.position = "none",
plot.subtitle = ggtext::element_markdown(size=18),
plot.title = element_text(size=20),
plot.caption = element_text(size=12))
p3
p3 = ggplot(top10_df %>% filter(year == 2020)) +
aes(xmin = -10,
xmax = popularity,
ymin = rank - .45,
ymax = rank + .45,
y = rank,
group = artists,
fill = old) +
geom_text(aes(label = as.character(year)),
x = 80 , y = -2, alpha=0.8,
hjust = 1,
size = 40, col = "grey40") +
geom_rect(alpha = .9) +
scale_x_continuous(
limits = c(-50, 100),
breaks = c(0, 20, 40, 60, 80, 100)) +
geom_text(hjust = "right",
aes(label = artists,
color = old),
x = -12) +
geom_text(aes(y = rank, label = name),
color = "white",
x = -8,
hjust = "left") +
scale_fill_manual(values=c("#CB7BA7","#1273B0"))+
scale_color_manual(values=c("#CB7BA7","#1273B0"))+
scale_y_reverse() +
labs(x = 'Popularity (0-100)',
y = '',
title = "The most popular artists through the decades.",
subtitle = "<span style = 'color: #CB7BA7'>New comers</span>
and
<span style = 'color: #1273B0'>Defending champions</span>",
caption = "Popularity is based on each artist's most popular song.") +
theme(legend.position = "none",
plot.subtitle = ggtext::element_markdown(size=18),
plot.title = element_text(size=20),
plot.caption = element_text(size=12))
p3
p3 = ggplot(top10_df %>% filter(year == 2020)) +
aes(xmin = -10,
xmax = popularity,
ymin = rank - .45,
ymax = rank + .45,
y = rank,
group = artists,
fill = old) +
geom_text(aes(label = as.character(year)),
x = 80 , y = -2, alpha=0.8,
hjust = "left",
size = 40, col = "grey40") +
geom_rect(alpha = .9) +
scale_x_continuous(
limits = c(-50, 100),
breaks = c(0, 20, 40, 60, 80, 100)) +
geom_text(hjust = "right",
aes(label = artists,
color = old),
x = -12) +
geom_text(aes(y = rank, label = name),
color = "white",
x = -8,
hjust = "left") +
scale_fill_manual(values=c("#CB7BA7","#1273B0"))+
scale_color_manual(values=c("#CB7BA7","#1273B0"))+
scale_y_reverse() +
labs(x = 'Popularity (0-100)',
y = '',
title = "The most popular artists through the decades.",
subtitle = "<span style = 'color: #CB7BA7'>New comers</span>
and
<span style = 'color: #1273B0'>Defending champions</span>",
caption = "Popularity is based on each artist's most popular song.") +
theme(legend.position = "none",
plot.subtitle = ggtext::element_markdown(size=18),
plot.title = element_text(size=20),
plot.caption = element_text(size=12))
p3
p3 = ggplot(top10_df %>% filter(year == 2020)) +
aes(xmin = -10,
xmax = popularity,
ymin = rank - .45,
ymax = rank + .45,
y = rank,
group = artists,
fill = old) +
geom_text(aes(label = as.character(year)),
x = 100 , y = -2, alpha=0.8,
hjust = "right",
size = 40, col = "grey40") +
geom_rect(alpha = .9) +
scale_x_continuous(
limits = c(-50, 100),
breaks = c(0, 20, 40, 60, 80, 100)) +
geom_text(hjust = "right",
aes(label = artists,
color = old),
x = -12) +
geom_text(aes(y = rank, label = name),
color = "white",
x = -8,
hjust = "left") +
scale_fill_manual(values=c("#CB7BA7","#1273B0"))+
scale_color_manual(values=c("#CB7BA7","#1273B0"))+
scale_y_reverse() +
labs(x = 'Popularity (0-100)',
y = '',
title = "The most popular artists through the decades.",
subtitle = "<span style = 'color: #CB7BA7'>New comers</span>
and
<span style = 'color: #1273B0'>Defending champions</span>",
caption = "Popularity is based on each artist's most popular song.") +
theme(legend.position = "none",
plot.subtitle = ggtext::element_markdown(size=18),
plot.title = element_text(size=20),
plot.caption = element_text(size=12))
p3
View(top10_df)
curr_df %>% strsplit(name, "\\(") %>% View()
curr_df %>% mutate(new_name = strsplit(name, "\\(")) %>% View()
curr_df %>% mutate(new_name = strsplit(name, "\\(")[[1]]) %>% View()
curr_df %>% mutate(new_name = strsplit(name, "\\(")[1]) %>% View()
?strsplit
curr_df %>% mutate(new_name = strsplit(name, "\\(")[[1]]) %>% View()
curr_df %>% mutate(new_name = gsub("\\[[^\\]]*\\]", "", name, perl=TRUE)) %>% View()
curr_df %>% mutate(new_name = gsub("\\([^\\]]*\\)", "", name, perl=TRUE)) %>% View()
top10_df = top10_df %>%
mutate(name = gsub("\\([^\\]]*\\)", "", name, perl=TRUE))
# Chunk 1: setup
library(tidyverse)
#remotes::install_github("wilkelab/cowplot")
#install.packages("colorspace", repos = "http://R-Forge.R-project.org")
#remotes::install_github("clauswilke/colorblindr")
library(colorblindr)
library(gghighlight)
theme_set(theme_minimal())
files <- fs::dir_ls(here::here("data"))
obs <- gsub(".+data/(.+)\\.csv", "\\1", files)
purrr::map2(obs, files, ~{
assign(.x, read_csv(.y), envir = .GlobalEnv)
})
# Chunk 2: Data Cleaning
data1 = data %>%
select(id, popularity, year, danceability, duration_ms, tempo, speechiness) %>%
mutate(popularity = (popularity-min(popularity))/(max(popularity)-min(popularity)),
danceability = (danceability-min(danceability))/(max(danceability)-min(danceability)),
duration =
(duration_ms-min(duration_ms))/(max(duration_ms)-min(duration_ms)),
tempo = (tempo-min(tempo))/(max(tempo)-min(tempo)),
speechiness = (speechiness-min(speechiness))/(max(speechiness)-min(speechiness))) %>%
select(-duration_ms)
fig1_data = data1 %>% select(-year) %>%
mutate(danceability = cut(danceability, 100, labels=FALSE),
duration = cut(duration, 100, labels=FALSE),
tempo = cut(tempo, 100, labels=FALSE),
speechiness = cut(speechiness, 100, labels=FALSE)) %>%
pivot_longer(cols = danceability:duration,
names_to = "property") %>%
group_by(property, value) %>%
summarise(popularity_median = median(popularity)) %>%
mutate(property = factor(property, levels=c("danceability",
"tempo",
"speechiness",
"duration"),
labels = c("Danceability",
"Tempo",
"Speechiness",
"Duration")))
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-100)") +
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-1)") +
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
# Chunk 1: setup
library(tidyverse)
#remotes::install_github("wilkelab/cowplot")
#install.packages("colorspace", repos = "http://R-Forge.R-project.org")
#remotes::install_github("clauswilke/colorblindr")
library(colorblindr)
library(gghighlight)
theme_set(theme_minimal())
files <- fs::dir_ls(here::here("data"))
obs <- gsub(".+data/(.+)\\.csv", "\\1", files)
purrr::map2(obs, files, ~{
assign(.x, read_csv(.y), envir = .GlobalEnv)
})
# Chunk 2: Data Cleaning
data1 = data %>%
select(id, popularity, year, danceability, duration_ms, tempo, speechiness) %>%
mutate(popularity = (popularity-min(popularity))/(max(popularity)-min(popularity)),
danceability = (danceability-min(danceability))/(max(danceability)-min(danceability)),
duration =
(duration_ms-min(duration_ms))/(max(duration_ms)-min(duration_ms)),
tempo = (tempo-min(tempo))/(max(tempo)-min(tempo)),
speechiness = (speechiness-min(speechiness))/(max(speechiness)-min(speechiness))) %>%
select(-duration_ms)
fig1_data = data1 %>% select(-year) %>%
mutate(danceability = cut(danceability, 100, labels=FALSE),
duration = cut(duration, 100, labels=FALSE),
tempo = cut(tempo, 100, labels=FALSE),
speechiness = cut(speechiness, 100, labels=FALSE)) %>%
pivot_longer(cols = danceability:duration,
names_to = "property") %>%
group_by(property, value) %>%
summarise(popularity_median = median(popularity)) %>%
mutate(property = factor(property, levels=c("danceability",
"tempo",
"speechiness",
"duration"),
labels = c("Danceability",
"Tempo",
"Speechiness",
"Duration")))
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-1)") +
scale_x_continuous(
limits = c(0, 1.05),
breaks = c(0, 20, 40, 60, 80, 100))
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
# Chunk 1: setup
library(tidyverse)
#remotes::install_github("wilkelab/cowplot")
#install.packages("colorspace", repos = "http://R-Forge.R-project.org")
#remotes::install_github("clauswilke/colorblindr")
library(colorblindr)
library(gghighlight)
theme_set(theme_minimal())
files <- fs::dir_ls(here::here("data"))
obs <- gsub(".+data/(.+)\\.csv", "\\1", files)
purrr::map2(obs, files, ~{
assign(.x, read_csv(.y), envir = .GlobalEnv)
})
# Chunk 2: Data Cleaning
data1 = data %>%
select(id, popularity, year, danceability, duration_ms, tempo, speechiness) %>%
mutate(popularity = (popularity-min(popularity))/(max(popularity)-min(popularity)),
danceability = (danceability-min(danceability))/(max(danceability)-min(danceability)),
duration =
(duration_ms-min(duration_ms))/(max(duration_ms)-min(duration_ms)),
tempo = (tempo-min(tempo))/(max(tempo)-min(tempo)),
speechiness = (speechiness-min(speechiness))/(max(speechiness)-min(speechiness))) %>%
select(-duration_ms)
fig1_data = data1 %>% select(-year) %>%
mutate(danceability = cut(danceability, 100, labels=FALSE),
duration = cut(duration, 100, labels=FALSE),
tempo = cut(tempo, 100, labels=FALSE),
speechiness = cut(speechiness, 100, labels=FALSE)) %>%
pivot_longer(cols = danceability:duration,
names_to = "property") %>%
group_by(property, value) %>%
summarise(popularity_median = median(popularity)) %>%
mutate(property = factor(property, levels=c("danceability",
"tempo",
"speechiness",
"duration"),
labels = c("Danceability",
"Tempo",
"Speechiness",
"Duration")))
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-1)") +
scale_x_continuous(
limits = c(0, 1.05),
breaks = c(0, 20, 40, 60, 80, 100))
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-1)") +
scale_x_continuous(
limits = c(0, 1.05))+
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-1)") +
scale_x_continuous(
limits = c(0, 0.5))+
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-1)") +
scale_y_continuous(
limits = c(0, 0.5))+
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
limits = c(-0.1, 0.5))+
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-1)") +
scale_y_continuous(
limits = c(-0.1, 0.5))+
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
limits = c(0, 0.5))+
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
ggplot(fig1_data, aes(x=value, y=popularity_median, group=property)) +
geom_ribbon(aes(ymin = 0, ymax = popularity_median, fill=property), alpha=0.3) +
geom_smooth(aes(color=property, fill=property))+
labs(x = "Normalized Value (0-100)", y = "Median Popularity (0-1)") +
scale_y_continuous(
limits = c(0, 0.5))+
scale_fill_OkabeIto()+
scale_color_OkabeIto(darken=-0.7)+
facet_wrap(~property, nrow=1)+
ggdark::dark_theme_gray() +
theme(legend.position = "none") +
labs(title = "Relationship between different song properties and popularity")
